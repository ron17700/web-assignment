@postId = 674a216bddaadf7320f6828c
@commentId = 6738b9c30e8d99f8abfb5db3
@senderId = 674a20c5ddaadf7320f6827d

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#~~~~~~~~~~ Comments ~~~~~~~~~~#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#

# Get all comments for a post
GET http://localhost:3001/post/{{postId}}/comment
Content-Type: application/json

###

# Get a specific comment by ID
GET http://localhost:3001/post/{{postId}}/comment/{{commentId}}
Content-Type: application/json

###

# Create a new comment for a post
POST http://localhost:3001/post/{{postId}}/comment
Content-Type: application/json

{
  "content": "This is another comment3",
  "author": "{{senderId}}"
}

###

# Update an existing comment
PUT http://localhost:3001/post/{{postId}}/comment/{{commentId}}
Content-Type: application/json

{
  "content": "This is a new comment - updated"
}

###

# Delete a comment
DELETE http://localhost:3001/post/{{postId}}/comment/{{commentId}}
Content-Type: application/json


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#~~~~~~~~~~~ Users ~~~~~~~~~~~~#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#


### Define Variables at the Top

@jwt_token = <YOUR_JWT_TOKEN>
@user_id = 60d5f1b7f0f1b2c5b4f2f123  # Replace with an actual user ID

### Register (Create a new user)
POST http://localhost:5000/api/auth/register
Content-Type: application/json

{
  "username": "john_doe",
  "email": "john.doe@example.com",
  "password": "securePassword123",
  "firstName": "John",
  "lastName": "Doe",
  "age": 30
}

### Login to get the JWT Token (Use this to obtain the @jwt_token)
POST http://localhost:5000/api/auth/login
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "password": "securePassword123"
}

### Get a specific user by ID (Read user by ID)
GET http://localhost:5000/api/users/@user_id
Authorization: Bearer {{jwt_token}}

### Get all users
GET http://localhost:5000/api/users
Authorization: Bearer {{jwt_token}}

### Update a user (allowed fields: firstName, lastName, age)
PUT http://localhost:5000/api/users/@user_id
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "firstName": "Jane",
  "lastName": "Smith",
  "age": 28
}

### Try updating username (should fail)
PUT http://localhost:5000/api/users/@user_id
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "username": "new_username"   // This should not be allowed
}

### Try updating email (should fail)
PUT http://localhost:5000/api/users/@user_id
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "email": "new_email@example.com"   // This should not be allowed
}

### Delete a user by ID
DELETE http://localhost:5000/api/users/@user_id
Authorization: Bearer {{jwt_token}}

### Attempt to delete a non-existent user (should fail)
DELETE http://localhost:5000/api/users/000000000000000000000000
Authorization: Bearer {{jwt_token}}